name: Build Binary

on:
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    name: Build vmGoat Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.2'
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Build binary
      working-directory: ./src
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o ../bin/vmGoat-${{ matrix.os }}-${{ matrix.arch }} ./cmd/vmGoat
    
    - name: Upload binary artifact
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: vmGoat-${{ matrix.os }}-${{ matrix.arch }}
        path: bin/vmGoat-${{ matrix.os }}-${{ matrix.arch }}
    
    - name: Upload to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: bin/vmGoat-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: vmGoat-${{ matrix.os }}-${{ matrix.arch }}
        asset_content_type: application/octet-stream 
